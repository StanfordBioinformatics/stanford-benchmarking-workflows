#! /bin/bash
##BENCHMARKING LOOM WORKLFLOW for GIAB samples USING HAPPY, ALSO GENRERATES INDEL SIZE DISTRIBUTION ####
###The user needs to provide channel name that fetches the called variants file generated by GATK/Speedseq workflow
###Inputs:
###Called variants file from GATK/Speedseq/...
###Chr Removed version of the called variants file
###User inputs:
###Truth.highconf.CodingExons.vcf.gz or Truth.highconf.CodingExons.vcf (Original high confidence vcf should be intersected with high confidence bed in NIST)
###Truth.highconf.WholeExome.vcf.gz or Truth.highconf.WholeExome.vcf (Original high confidence vcf should be intersected with high confidence bed in NIST)
###Truth.highconf.CodingExons.bed 
###Truth.highconf.WholeExome.bed
###haplotypeCaller_Output_variants_asVCF (generated by a variant calling pipeline such as GATK or Speedseq)
###Fixed inputs:
###Location of the Reference fasta file (chr prefix removed version, eg., ucsc_hg19.fasta)
###Prefixes and suffixes to be used in different output files
###Outputs:
###Location of output directory to hold all output files for each step
###Location for the Hap.py Console output that is captured + saved as file and Console output filename 
###Can add code for rtg comparison and INDEL size distribution
#####EXAMPLE: loom run Benchmarking@19faaff2357a40ddb85bc3de54f9f525 haplotypeCaller_Output_variants_asVCF=NA24385.recal.vcf@d19d80525e05437bb1f21b00636f4f1e outputFile_commonPrefix="happyResults_NA24385_NISTv3.3" truthCodingExonsVCF=HG002_GIAB_highconf_CG-IllFB-IllGATKHC-Ion-Solid-10X_CHROM1-22_v3.3_highconf_Overlapping_refseqCodingExonsmerged_chrRemoved_intersected_highconfbed.vcf.gz@c3b4efd0c1974a40bef4f28222dd15f6 truthWholeExomeVCF=HG002_GIAB_highconf_CG-IllFB-IllGATKHC-Ion-Solid-10X_CHROM1-22_v3.3_highconf_Overlapping_refseqWholeExomemerged_chrRemoved_intersected_highconfbed.vcf.gz@855ac863c1ec4ddaa89fb37d23200e38 truthCodingExonsBED=AJTriov3.3highconf_HG002son_Overlapping_refseqCodingExonsmerged_chrRemoved.bed@11cd927764ef4de4a3553b78e48047d9 truthWholeExomeBED=AJTriov3.3highconf_HG002son_Overlapping_refseqWholeExomemerged_chrRemoved.bed@9e42cf2fa4344e68a24c6afd68eea821 Rscript_indelSize=indelSizeDistribution_Detailed.R@loomID


name: BenchmarkingWorkFlow_hg19_IndelsizeDistributionWith_TPFPFN_usingHappy
inputs:
   - type: file ## GATK pipeline generated variants file serves as input vcf for benchmarking
     channel: haplotypeCaller_Output_variants_asVCF
   - type: string    ## Example :  happyResults_NA24385_NISTv3.3
     channel: outputFile_commonPrefix    
   - type: file
     channel: truthCodingExonsVCF
   - type: file
     channel: truthWholeExomeVCF
   - type: file
     channel: truthCodingExonsBED
   - type: file
     channel: truthWholeExomeBED
   - type: file
     channel: Rscript_indelSize ## Specify the R script indelSizeDistribution_Detailed.R  
fixed_inputs: 
   - type: file    
     channel: referenceFasta  ## provide md5 hash values for the file in contents 
     data:
       contents: $77c8a0d7b8ee2208f29115d73b67056a
   - type: file
     channel: referenceFasta_indexed  ## *.fai
     data:
       contents: $ace3f14f7f6e140e05db66bee0a8b94f
   - type: string
     channel: chrRemovedVCF_fileSuffix
     data:
       contents: _chrRemoved.vcf.gz    
   - type: string
     channel: codingExonsPrefix 
     data:
       contents: _CodingExons
   - type: string
     channel: WholeExomePrefix 
     data:
       contents: _WholeExome
   - type: string
     channel: consoleOutputPartialFilename
     data:
       contents: _ConsoleOutput.txt
   - type: string
     channel: indelDistributionSuffix
     data: 
       contents: _indelDistribution_Frombcftools.txt    
   - type: string
     channel: indelSizeDistributionSuffix
     data:       
       contents: _indelSizeDistribution.txt   
   - type: string
     channel: indelSizeDistributionPlotSuffix
     data:       
       contents: _indelSizeDistributionPlot.pdf    
outputs:
  - type: file
    channel: codingExons_annotated_vcf_gz
  - type: file
    channel: codingExons_annotated_vcf_gz_tbi
  - type: file
    channel: codingExons_counts_csv
  - type: file
    channel: codingExons_counts_json
  - type: file
    channel: codingExons_extended_csv
  - type: file
    channel: codingExons_metrics_json
  - type: file
    channel: codingExons_summary_csv
  - type: file
    channel: codingExons_console_output_txt
  - type: file
    channel: WholeExome_annotated_vcf_gz
  - type: file
    channel: WholeExome_annotated_vcf_gz_tbi
  - type: file
    channel: WholeExome_counts_csv
  - type: file
    channel: WholeExome_counts_json
  - type: file
    channel: WholeExome_extended_csv
  - type: file
    channel: WholeExome_metrics_json
  - type: file
    channel: WholeExome_summary_csv
  - type: file
    channel: WholeExome_console_output_txt  
  - type: file 
    channel: codingExons_annotated_TPonly_vcf_gz
  - type: file 
    channel: codingExons_annotated_FPonly_vcf_gz 
  - type: file 
    channel: codingExons_annotated_FNonly_vcf_gz   
  - type: file 
    channel: WholeExome_annotated_TPonly_vcf_gz 
  - type: file 
    channel: WholeExome_annotated_FPonly_vcf_gz  
  - type: file 
    channel: WholeExome_annotated_FNonly_vcf_gz    
  - type: file   
    channel: indelDistribution_CodingExons  ## .txt file
  - type: file   
    channel: indelDistribution_WholeExome  ## .txt file 
  - type: file   
    channel: indelSizeDistribution_CodingExons  ## .txt file
  - type: file   
    channel: indelSizeDistribution_WholeExome  ## .txt file 
  - type: file   
    channel: indelSizeDistributionPlot_CodingExons  ## .PDF file
  - type: file   
    channel: indelSizeDistributionPlot_WholeExome  ## .PDF file       
steps:   
  - name: vcfComparison_by_Happy_CodingExons
    inputs:
     - type: file
       channel: haplotypeCaller_Output_variants_asVCF
     - type: string    ## Example :  happyResults_NA12878vsNISTv3.3
       channel: outputFile_commonPrefix   
     - type: file
       channel: truthCodingExonsVCF
     - type: file
       channel: truthCodingExonsBED
     - type: file
       channel: referenceFasta
     - type: file
       channel: referenceFasta_indexed  ## *.fai
     - type: string
       channel: codingExonsPrefix 
     - type: string
       channel: consoleOutputPartialFilename
    outputs:
     - type: file
       channel: codingExons_annotated_vcf_gz
       source:  
        filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}.vcf.gz" ##Need this later if doing indel size distribution
     - type: file
       channel: codingExons_annotated_vcf_gz_tbi
       source:  
        filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}.vcf.gz.tbi"
     - type: file
       channel: codingExons_counts_csv
       source:  
        filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}.counts.csv"
     - type: file
       channel: codingExons_counts_json
       source:  
        filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}.counts.json"
     - type: file
       channel: codingExons_extended_csv
       source:  
        filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}.extended.csv"
     - type: file
       channel: codingExons_metrics_json
       source:  
        filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}.metrics.json"
     - type: file
       channel: codingExons_summary_csv
       source:  
        filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}.summary.csv"
     - type: file
       channel: codingExons_console_output_txt ## To capture hap.py metrics output displayed on the console
       source:  
        filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}{{consoleOutputPartialFilename}}"
    command: /opt/hap.py/bin/hap.py -V {{truthCodingExonsVCF}} {{queryVCF}} -f {{truthCodingExonsBED}} -T {{truthCodingExonsBED}} -r {{referenceFasta}} -o {{outputFile_commonPrefix}}{{codingExonsPrefix}} > {{outputFile_commonPrefix}}{{codingExonsPrefix}}{{consoleOutputPartialFilename}}
    environment:
           docker_image: sowmiu/happy
    resources:
           memory: "8"
           cores: "1"
  - name: vcfComparison_by_Happy_WholeExome
    inputs:
     - type: file
       channel: haplotypeCaller_Output_variants_asVCF
     - type: string    ## Example :  happyResults_NA24385_NISTv3.3
       channel: outputFile_commonPrefix
     - type: file
       channel: truthWholeExomeVCF
     - type: file
       channel: truthWholeExomeBED
     - type: file
       channel: referenceFasta
     - type: file
       channel: referenceFasta_indexed  ## *.fai
     - type: string
       channel: WholeExomePrefix 
     - type: string
       channel: consoleOutputPartialFilename
    outputs:
     - type: file
       channel: WholeExome_annotated_vcf_gz
       source:  
        filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}.vcf.gz" ##Need this later if doing indel size distribution
     - type: file
       channel: WholeExome_annotated_vcf_gz_tbi
       source:  
        filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}.vcf.gz.tbi"
     - type: file
       channel: WholeExome_counts_csv
       source:  
        filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}.counts.csv"
     - type: file
       channel: WholeExome_counts_json
       source:  
        filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}.counts.json"
     - type: file
       channel: WholeExome_extended_csv
       source:  
        filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}.extended.csv"
     - type: file
       channel: WholeExome_metrics_json
       source:  
        filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}.metrics.json"
     - type: file
       channel: WholeExome_summary_csv
       source:  
        filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}.summary.csv"
     - type: file
       channel: WholeExome_console_output_txt  ## To capture hap.py output displayed on the console
       source:  
        filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}{{consoleOutputPartialFilename}}"
    command: /opt/hap.py/bin/hap.py -V {{truthWholeExomeVCF}} {{queryVCF}} -f {{truthWholeExomeBED}} -T {{truthWholeExomeBED}} -r {{referenceFasta}} -o {{outputFile_commonPrefix}}{{WholeExomePrefix}} > {{outputFile_commonPrefix}}{{WholeExomePrefix}}{{consoleOutputPartialFilename}}
    environment:
           docker_image: sowmiu/happy
    resources:
           memory: "8"
           cores: "1"

## Splitting the Coding Exons annotated vcf generated by Happy into TP, FP and FN calls              
  - name:  splittingAnnotatedVCF_CodingExons
    inputs:
     - type: string    ## Example :  happyResults_NA24385_NISTv3.3
       channel: outputFile_commonPrefix
     - type: string
       channel: codingExonsPrefix
     - type: file ## Obtained from the vcfComparison_by_Happy_CodingExons
       channel: codingExons_annotated_vcf_gz   
    outputs: 
     - type: file 
       channel: codingExons_annotated_TPonly_vcf_gz
       source: 
         filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}_TPonly.vcf.gz"
     - type: file 
       channel: codingExons_annotated_FPonly_vcf_gz 
       source: 
         filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}_FPonly.vcf.gz"
     - type: file 
       channel: codingExons_annotated_FNonly_vcf_gz  
       source: 
         filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}_FNonly.vcf.gz"
    command: bcftools view -O z -V snps -i 'FMT/BVT="INDEL" & FMT/BD="TP"' {{codingExons_annotated_vcf_gz}} > {{codingExons_annotated_TPonly_vcf_gz}}; bcftools view -O z -V snps -i 'FMT/BVT="INDEL" & FMT/BD="FP"' {{codingExons_annotated_vcf_gz}} > {{codingExons_annotated_FPonly_vcf_gz}}; bcftools view -O z -V snps -i 'FMT/BVT="INDEL" & FMT/BD="FN"' {{codingExons_annotated_vcf_gz}} > {{codingExons_annotated_FNonly_vcf_gz}}
    environment:
           docker_image: vandhanak/bcftools:1.3.1
    resources:
           memory: "8"
           cores: "1"   
                
## Splitting the WholeExome annotated vcf generated by Happy into TP, FP and FN calls
  - name:  splittingAnnotatedVCF_WholeExome
    inputs:
     - type: string    ## Example :  happyResults_NA24385_NISTv3.3
       channel: outputFile_commonPrefix
     - type: string
       channel: WholeExomePrefix
     - type: file ## Obtained from the vcfComparison_by_Happy_CodingExons
       channel: WholeExome_annotated_vcf_gz   
    outputs: 
     - type: file 
       channel: WholeExome_annotated_TPonly_vcf_gz
       source: 
         filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}_TPonly.vcf.gz"
     - type: file 
       channel: WholeExome_annotated_FPonly_vcf_gz 
       source: 
         filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}_FPonly.vcf.gz"
     - type: file 
       channel: WholeExome_annotated_FNonly_vcf_gz  
       source: 
         filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}_FNonly.vcf.gz"
    command: bcftools view -O z -V snps -i 'FMT/BVT="INDEL" & FMT/BD="TP"' {{WholeExome_annotated_vcf_gz}} > {{WholeExome_annotated_TPonly_vcf_gz}}; bcftools view -O z -V snps -i 'FMT/BVT="INDEL" & FMT/BD="FP"' {{WholeExome_annotated_vcf_gz}} > {{WholeExome_annotated_FPonly_vcf_gz}}; bcftools view -O z -V snps -i 'FMT/BVT="INDEL" & FMT/BD="FN"' {{WholeExome_annotated_vcf_gz}} > {{WholeExome_annotated_FNonly_vcf_gz}}
    environment:
           docker_image: vandhanak/bcftools:1.3.1
    resources:
           memory: "8"
           cores: "1"                                               

## Generating the Indel distribution for Coding Exons using bcftools , USE TRUTH VCF ! (not Happy's annotated VCF)                      
  - name: indelDistribution_CodingExons_HappyResults
    inputs:
     - type: string    ## Example :  happyResults_NA24385_NISTv3.3
       channel: outputFile_commonPrefix
     - type: string
       channel: codingExonsPrefix 
     - type: file 
       channel: truthCodingExonsVCF 
     - type: string
       channel: indelDistributionSuffix
    outputs: 
     - type: file   
       channel: indelDistribution_CodingExons 
       source: 
         filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}{{indelDistributionSuffix}}"
    command: start=`bcftools stats {{truthCodingExonsVCF}}| awk '/InDel distribution/ {print FNR}'`; end=`bcftools stats {{truthCodingExonsVCF}}| awk '/Substitution types/ {print FNR}'`; end=$((end - 1)); bcftools stats {{truthCodingExonsVCF}}| sed -n "$start,$end p" > {{indelDistribution_CodingExons}}
    environment:
           docker_image: vandhanak/bcftools:1.3.1
    resources:
           memory: "8"
           cores: "1"  

## Generating the Indel distribution for WholeExome using bcftools, USE TRUTH VCF ! (not Happy's annotated VCF)                   
  - name: indelDistribution_WholeExome_HappyResults
    inputs:
     - type: string    ## Example :  happyResults_NA24385_NISTv3.3
       channel: outputFile_commonPrefix
     - type: string
       channel: WholeExomePrefix    
     - type: file  ## Obtained from the vcfComparison_by_Happy_WholeExome
       channel: truthWholeExomeVCF
     - type: string
       channel: indelDistributionSuffix
    outputs: 
     - type: file   
       channel: indelDistribution_WholeExome 
       source: 
         filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}{{indelDistributionSuffix}}"
    command: start=`bcftools stats {{truthWholeExomeVCF}}| awk '/InDel distribution/ {print FNR}'`; end=`bcftools stats {{truthWholeExomeVCF}}| awk '/Substitution types/ {print FNR}'`; end=$((end - 1)); bcftools stats {{truthWholeExomeVCF}}| sed -n "$start,$end p" > {{indelDistribution_WholeExome}}    
    environment:
           docker_image: vandhanak/bcftools:1.3.1
    resources:
           memory: "8"
           cores: "1" 

## Generating the Indel distribution for Coding Exons based on size ranges + TP,FP,FN counts for each size range            
  - name: indelSizeDistribution_CodingExons_HappyResults
    inputs:
     - type: string    ## Example :  happyResults_NA24385_NISTv3.3
       channel: outputFile_commonPrefix
     - type: string
       channel: codingExonsPrefix 
     - type: file ## Obtained from indelDistribution_CodingExons_HappyResults
       channel: indelDistribution_CodingExons
     - type: string
       channel: indelSizeDistributionSuffix
     - type: string
       channel: indelSizeDistributionPlotSuffix  
     - type: file
       channel: codingExons_annotated_TPonly_vcf_gz
     - type: file
       channel: codingExons_annotated_FPonly_vcf_gz
     - type: file
       channel: codingExons_annotated_FNonly_vcf_gz    
     - type: file
       channel: Rscript_indelSize  
    outputs: 
     - type: file   
       channel: indelSizeDistribution_CodingExons 
       source: 
         filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}{{indelSizeDistributionSuffix}}"
     - type: file
       channel: indelSizeDistributionPlot_CodingExons
       source:
         filename: "{{outputFile_commonPrefix}}{{codingExonsPrefix}}{{indelSizeDistributionPlotSuffix}}"
    command: Rscript {{Rscript_indelSize}} {{indelDistribution_CodingExons}} {{codingExons_annotated_TPonly_vcf_gz}} {{codingExons_annotated_FPonly_vcf_gz}} {{codingExons_annotated_FNonly_vcf_gz}} {{indelSizeDistribution_CodingExons}} {{indelSizeDistributionPlot_CodingExons}}
    environment:
           docker_image: vandhanak/rbase:3.3.2
    resources:
           memory: "8"
           cores: "1"

## Generating the Indel distribution for WholeExome based on size ranges + TP,FP,FN counts for each size range            
  - name: indelSizeDistribution_WholeExome_HappyResults
    inputs:
     - type: string    ## Example :  happyResults_NA24385_NISTv3.3
       channel: outputFile_commonPrefix
     - type: string
       channel: WholeExomePrefix 
     - type: file ## Obtained from indelDistribution_WholeExome_HappyResults
       channel: indelDistribution_WholeExome
     - type: string
       channel: indelSizeDistributionSuffix
     - type: string
       channel: indelSizeDistributionPlotSuffix  
     - type: file
       channel: WholeExome_annotated_TPonly_vcf_gz
     - type: file
       channel: WholeExome_annotated_FPonly_vcf_gz
     - type: file
       channel: WholeExome_annotated_FNonly_vcf_gz  
     - type: file
       channel: Rscript_indelSize  
    outputs: 
     - type: file   
       channel: indelSizeDistribution_WholeExome 
       source: 
         filename: "{{outputFile_commonPrefix}}{{WholeExomePrefix}}{{indelSizeDistributionSuffix}}"
     - type: file
       channel: indelSizeDistributionPlot_WholeExome
       source:
         filename:  "{{outputFile_commonPrefix}}{{WholeExomePrefix}}{{indelSizeDistributionPlotSuffix}}"  
    command: Rscript {{Rscript_indelSize}} {{indelDistribution_WholeExome}} {{WholeExome_annotated_TPonly_vcf_gz}} {{WholeExome_annotated_FPonly_vcf_gz}} {{WholeExome_annotated_FNonly_vcf_gz}} {{indelSizeDistribution_WholeExome}} {{indelSizeDistributionPlot_WholeExome}}
    environment:
           docker_image: vandhanak/rbase:3.3.2
    resources:
           memory: "8"
           cores: "1"
    
